{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context/github/GithubState.js","components/layout/Spinner.js","components/repos/Repoitem.js","components/repos/Repos.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/pages/About.js","components/users/Search.js","components/users/Useritem.js","components/users/Users.js","components/pages/Home.js","components/pages/NotFound.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","githubClientId","githubClientSecret","Spinner","src","spinner","alt","style","width","margin","display","Repoitem","repo","href","html_url","name","Repos","repos","map","key","id","githubContext","createContext","User","match","useContext","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","alertContext","Alert","alert","AlertContext","type","msg","About","Search","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","userStyle","gridTemplateColumns","gridGap","Users","Home","NotFound","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5676987.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.baeaf0c7.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className={icon} /> {title}\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Finder',\r\n  icon: 'fab fa-github',\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from '../types';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = (props) => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  //   Search Users\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=\r\n    ${githubClientId}&client_id=\r\n    ${githubClientSecret}`);\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n\r\n  // Get user\r\n  const getUser = async (username) => {\r\n    setLoading();\r\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=\r\n    ${githubClientId}&client_id=\r\n    ${githubClientSecret}`);\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //  Get Repos\r\n\r\n  const getUserRepos = async (username) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\r\n    ${githubClientId}&client_id=\r\n    ${githubClientSecret}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //  Clear Users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  //  Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos,\r\n      }}>\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Repoitem = ({ repo }) => {\r\n  return (\r\n    <div className='card'>\r\n      <h3>\r\n        <a href={repo.html_url}>{repo.name}</a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoitem.propTypes = {\r\n  repo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Repoitem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './Repoitem';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable,\r\n    company,\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-light'>\r\n        Back to Search\r\n      </Link>\r\n      Hireable:{' '}\r\n      {hireable ? (\r\n        <i className='fas fa-check text-success' />\r\n      ) : (\r\n        <i className='fas fa-times-circle text-danger' />\r\n      )}\r\n      <div className='card grid-2'>\r\n        <div className='all-center'>\r\n          <img\r\n            src={avatar_url}\r\n            className='round-img'\r\n            style={{ width: '150px' }}\r\n            alt=''\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className='btn btn-dark my-1'>\r\n            Visit Github Profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website: </strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='card text-center'>\r\n        <div className='badge badge-primary'>Followers: {followers}</div>\r\n        <div className='badge badge-success'>Following: {following}</div>\r\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\r\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { alert } = alertContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About This App</h1>\r\n      <p>App to search Github users</p>\r\n      <p>Version: 1.0.0</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert('Please enter a valid Github user', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          placeholder='Search Users...'\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value='Search'\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className='btn btn-light btn-block'\r\n          onClick={githubContext.clearUsers}>\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n  return (\r\n    <div className='card text-center'>\r\n      <img\r\n        src={avatar_url}\r\n        alt=''\r\n        className='round-img'\r\n        style={{ width: '60px' }}\r\n      />\r\n      <h3> {login}</h3>\r\n\r\n      <div>\r\n        <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\r\n          More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useContext } from 'react';\r\nimport UserItem from './Useritem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { loading, users } = githubContext;\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem',\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => (\r\n  <Fragment>\r\n    <Search />\r\n    <Users />\r\n  </Fragment>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1> Not Found</h1>\r\n      <p className='lead'>The page you are looking for does not exist..</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  //   Set Alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type },\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert,\r\n      }}>\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport Home from './components/pages/Home';\nimport NotFound from './components/pages/NotFound';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className='App'>\n            <Navbar />\n            <div className='container'>\n              <Alert />\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}